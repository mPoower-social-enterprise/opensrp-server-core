<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="org.opensrp.repository.postgres.mapper.custom.CustomMhealthClientMetadataMapper">
		
	
	
	<sql id="Base_Column_List">
		c.id, c.json
	</sql>
	
	<sql id="Base_Table_List">
		from core.client_metadata${postfix} cm
		join core.client${postfix} c on cm.client_id = c.id
	</sql>
	
	<update id="updateByPrimaryKeySelective" parameterType="org.opensrp.domain.postgres.MhealthClient">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 25 14:17:23 EAT 2020.
    -->
    update core.client
    <set>
      <if test="json != null">
        json = #{json,jdbcType=OTHER,typeHandler=org.opensrp.repository.postgres.handler.ClientTypeHandler},
      </if>
      <if test="dateDeleted != null">
        date_deleted = #{dateDeleted,jdbcType=TIMESTAMP},
      </if>
      <if test="serverVersion != null">
        server_version = #{serverVersion,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
    </update>
    
	<select id="selectByDocumentId"
		resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="Base_Column_List" />
		<include refid="Base_Table_List" />
		where cm.document_id = #{documentId,jdbcType=VARCHAR} and cm.date_deleted is null
	</select>
	
	<select id="selectOne"
		resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		<include refid="Base_Column_List" />
		<include refid="Base_Table_List" />
		where cm.base_entity_id = #{baseEntityId,jdbcType=VARCHAR} and cm.date_deleted is null
	</select>
	
	<update id="updateByPrimaryKeyAndGenerateServerVersion" parameterType="org.opensrp.domain.postgres.MhealthClient">
	    update core.client
	    set json = #{json,jdbcType=OTHER,typeHandler=org.opensrp.repository.postgres.handler.ClientTypeHandler},
	    date_deleted = #{dateDeleted,jdbcType=TIMESTAMP},
	    server_version = nextVal('core.client_server_version_seq'),
	    base_entity_id = #{baseEntityId,jdbcType=VARCHAR},
	    district = #{district,jdbcType=VARCHAR},
	    division = #{division,jdbcType=VARCHAR},
	    branch = #{branch,jdbcType=VARCHAR},
	    village = #{village,jdbcType=VARCHAR}
	    where id = #{id,jdbcType=BIGINT}
    </update>
    
    <update id="updateByPrimaryKey" parameterType="org.opensrp.domain.postgres.MhealthClientMetadata">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 30 15:22:34 EAT 2020.
    -->
    update core.client_metadata
    set client_id = #{clientId,jdbcType=BIGINT},
      document_id = #{documentId,jdbcType=VARCHAR},
      base_entity_id = #{baseEntityId,jdbcType=VARCHAR},
      relational_id = #{relationalId,jdbcType=VARCHAR},
      server_version = #{serverVersion,jdbcType=BIGINT},
      openmrs_uuid = #{openmrsUuid,jdbcType=VARCHAR},
      unique_id = #{uniqueId,jdbcType=VARCHAR},
      first_name = #{firstName,jdbcType=VARCHAR},
      middle_name = #{middleName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      birth_date = #{birthDate,jdbcType=DATE},
      date_deleted = #{dateDeleted,jdbcType=TIMESTAMP},
      residence = #{residence,jdbcType=VARCHAR},
      location_id = #{locationId,jdbcType=VARCHAR},
      client_type = #{clientType,jdbcType=VARCHAR},
      date_created = #{dateCreated,jdbcType=TIMESTAMP},
      date_edited = #{dateEdited,jdbcType=TIMESTAMP},
      address1 = #{address1,jdbcType=VARCHAR},
      address2 = #{address2,jdbcType=VARCHAR},
      address3 = #{address3,jdbcType=VARCHAR},      
	  district = #{district,jdbcType=VARCHAR},
      division = #{division,jdbcType=VARCHAR},
      branch = #{branch,jdbcType=VARCHAR},
      village = #{village,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
    </update>
    
	<insert id="insertSelectiveAndSetId" parameterType="org.opensrp.domain.postgres.MhealthClient"
			useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into core.client
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="json != null">
				json,
			</if>
			<if test="serverVersion != null">
				server_version,
			</if>
			<if test="baseEntityId != null">
				base_entity_id,
			</if>
			<if test="district != null">
				district,
			</if>
			<if test="division != null">
				division,
			</if>
			<if test="branch != null">
				branch,
			</if>
			<if test="village != null">
				village,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="json != null">
				#{json,jdbcType=OTHER,typeHandler=org.opensrp.repository.postgres.handler.ClientTypeHandler},
			</if>
			nextVal('core.client_server_version_seq'),
			<if test="baseEntityId != null">
				#{baseEntityId,jdbcType=VARCHAR},
			</if>
			<if test="district != null">
				#{district,jdbcType=VARCHAR},
			</if>
			<if test="division != null">
				#{division,jdbcType=VARCHAR},
			</if>
			<if test="branch != null">
				#{branch,jdbcType=VARCHAR},
			</if>
			<if test="village != null">
				#{village,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	
	
	<insert id="insertSelective" parameterType="org.opensrp.domain.postgres.MhealthClientMetadata">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 30 15:22:34 EAT 2020.
    -->
    insert into core.client_metadata
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="documentId != null">
        document_id,
      </if>
      <if test="baseEntityId != null">
        base_entity_id,
      </if>
      <if test="relationalId != null">
        relational_id,
      </if>
      <if test="serverVersion != null">
        server_version,
      </if>
      <if test="openmrsUuid != null">
        openmrs_uuid,
      </if>
      <if test="uniqueId != null">
        unique_id,
      </if>
      <if test="firstName != null">
        first_name,
      </if>
      <if test="middleName != null">
        middle_name,
      </if>
      <if test="lastName != null">
        last_name,
      </if>
      <if test="birthDate != null">
        birth_date,
      </if>
      <if test="dateDeleted != null">
        date_deleted,
      </if>
      <if test="residence != null">
        residence,
      </if>
      <if test="locationId != null">
        location_id,
      </if>
      <if test="clientType != null">
        client_type,
      </if>
      <if test="dateCreated != null">
        date_created,
      </if>
      <if test="dateEdited != null">
        date_edited,
      </if>
       <if test="address1 != null">
        address1,
      </if>
       <if test="address2 != null">
        address2,
      </if>
       <if test="address3 != null">
        address3,
      </if>
      <if test="villageId != null">
        village_id,
      </if>
      <if test="district != null">
		district,
	  </if>
	  <if test="division != null">
		division,
	  </if>
	  <if test="branch != null">
		branch,
	  </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=BIGINT},
      </if>
      <if test="documentId != null">
        #{documentId,jdbcType=VARCHAR},
      </if>
      <if test="baseEntityId != null">
        #{baseEntityId,jdbcType=VARCHAR},
      </if>
      <if test="relationalId != null">
        #{relationalId,jdbcType=VARCHAR},
      </if>
      <if test="serverVersion != null">
        #{serverVersion,jdbcType=BIGINT},
      </if>
      <if test="openmrsUuid != null">
        #{openmrsUuid,jdbcType=VARCHAR},
      </if>
      <if test="uniqueId != null">
        #{uniqueId,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="middleName != null">
        #{middleName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        #{birthDate,jdbcType=DATE},
      </if>
      <if test="dateDeleted != null">
        #{dateDeleted,jdbcType=TIMESTAMP},
      </if>
      <if test="residence != null">
        #{residence,jdbcType=VARCHAR},
      </if>
      <if test="locationId != null">
        #{locationId,jdbcType=VARCHAR},
      </if>
      <if test="clientType != null">
        #{clientType,jdbcType=VARCHAR},
      </if>
      <if test="dateCreated != null">
        #{dateCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="dateEdited != null">
        #{dateEdited,jdbcType=TIMESTAMP},
      </if>
       <if test="address1 != null">
        #{address1,jdbcType=VARCHAR},
      </if>
      <if test="address2 != null">
        #{address2,jdbcType=VARCHAR},
      </if>
       <if test="address3 != null">
        #{address3,jdbcType=VARCHAR},
      </if>
      <if test="villageId != null">
        #{villageId,jdbcType=BIGINT},
      </if>
      <if test="district != null">
		#{district,jdbcType=VARCHAR},
	  </if>
	  <if test="division != null">
		#{division,jdbcType=VARCHAR},
	  </if>
	  <if test="branch != null">
		#{branch,jdbcType=VARCHAR},
	  </if>
    </trim>
  </insert>
  
	<select id="selectClientIdByBaseEntityId"
		resultType="Integer">
		select client_id
		from core.client_metadata${postfix} cm
		where cm.base_entity_id = #{baseEntityId,jdbcType=VARCHAR} and cm.date_deleted is null limit 1
	</select>
	
	<select id="selectClientByClientId"
		resultMap="org.opensrp.repository.postgres.mapper.ClientMapper.BaseResultMap">
		select
		c.id, c.json
		from core.client${postfix} c
		where c.id = #{clientId} limit 1
	</select>
		<select id="selectServerVersionByPrimaryKey"
		parameterType="java.lang.Long" resultType="long">
		select server_version from core.client where id = #{id,jdbcType=BIGINT}
	</select>

</mapper>
